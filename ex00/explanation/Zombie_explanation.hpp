/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Zombie_explanation.hpp                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: kanahash <kanahash@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/16 00:35:13 by kanahash          #+#    #+#             */
/*   Updated: 2025/07/16 00:35:24 by kanahash         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef ZOMBIE_HPP // ヘッダーガードの開始: ZOMBIE_HPP がまだ定義されていなければ、このファイルを処理します。
                   // これにより、同じヘッダーファイルが複数回含まれることによるエラーを防ぎます。
#define ZOMBIE_HPP // ZOMBIE_HPP を定義します。これ以降、同じファイルが読み込まれてもスキップされます。

#include <string>   // std::string クラスを使うために必要です。ゾンビの名前を保持します。
#include <iostream> // std::cout（標準出力）を使うために必要です。メッセージを表示するために使います。

// Zombie クラスの定義を開始します。
// これは「ゾンビ」という種類のオブジェクトを作るための設計図です。
class Zombie
{
	private: // ここから下のメンバーは、このクラスの内部からしかアクセスできません（外部からは隠されています）。
		std::string name; // 各ゾンビが持つ「名前」を保存するためのプライベート変数です。

	public: // ここから下のメンバーは、このクラスの外部からアクセスできます。
		// コンストラクタ: Zombieオブジェクトが「生まれたとき」に自動的に呼び出される特別な関数です。
		// 引数として受け取った 'name' を使ってゾンビの名前を設定します。
		Zombie(std::string name);

		// デストラクタ: Zombieオブジェクトが「消滅するとき」に自動的に呼び出される特別な関数です。
		// メモリが解放される直前に、クリーンアップなどの最終処理を行います。
		~Zombie();

		// メンバー関数: 各Zombieオブジェクトが実行できる「行動」を定義します。
		// この関数はゾンビに自己紹介をさせます。
		void announce(void);
};

// グローバル関数（クラスのメンバーではない、独立した関数）の宣言です。

// newZombie関数:
// ヒープメモリ（大きな倉庫）に新しいZombieオブジェクトを作成し、そのオブジェクトへのポインタを返します。
// このゾンビは、明示的に 'delete' されるまで存在し続けます。
Zombie* newZombie(std::string name);

// randomChump関数:
// スタックメモリ（一時的な棚）に新しいZombieオブジェクトを作成し、すぐに自己紹介させます。
// このゾンビは、関数が終わると同時に自動的に消滅します。
void randomChump(std::string name);

#endif // ヘッダーガードの終わり: ZOMBIE_HPP が定義されていれば、ここまでの内容がスキップされます。

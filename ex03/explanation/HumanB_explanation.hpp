/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   HumanB_explanation.hpp                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: kanahash <kanahash@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/17 00:45:22 by kanahash          #+#    #+#             */
/*   Updated: 2025/07/17 00:45:28 by kanahash         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef HUMANB_HPP // ヘッダーガードの開始: HUMANA_HPPがまだ定義されていない場合のみ、以下のコードがコンパイルされます。
                   // これにより、同じヘッダーファイルが複数回インクルードされることを防ぎ、多重定義エラーを回避します。
#define HUMANB_HPP // HUMANA_HPPを定義します。

#include "Weapon.hpp" // Weaponクラスの定義が含まれるWeapon.hppファイルをインクルードします。
                      // HumanBクラスがWeaponクラスを参照（ポインタとして）するため、Weaponの定義が必要です。

class HumanB // HumanBという名前のクラスを宣言します。
{
    private: // privateセクション: これらのメンバーはクラスの外部から直接アクセスできません。
        std::string name; // HumanBの名前を保存するstring型のメンバー変数です。
        Weapon* weapon;   // HumanBが使用するWeaponオブジェクトへのポインタです。
                          // ポインタであるため、HumanBはWeaponオブジェクトの所有権を持たず、
                          // 外部で作成されたWeaponオブジェクトを指すことができます。
                          // これは、HumanBが武器を持たない状態（NULLポインタ）でも存在できることを意味します。
    public: // publicセクション: これらのメンバーはクラスの外部からアクセスできます。
        // コンストラクター: HumanBオブジェクトが作成されるときに呼び出されます。
        // HumanBの名前を受け取ります。武器は後から設定できます。
        HumanB(std::string name);
        
        // デストラクター: HumanBオブジェクトが破棄されるときに呼び出されます。
        // ポインタを所有している場合、ここでメモリ解放などのクリーンアップ処理が必要になることがあります。
        // ただし、この設計ではHumanBはWeaponの所有者ではないため、明示的な解放は通常不要です。
        ~HumanB();
    
    // attackメソッド: HumanBが攻撃を実行する際に呼び出される関数です。
    // 'void'は、このメソッドが値を返さないことを示します。
    // 'const'は、このメソッドがHumanBオブジェクトのメンバー変数を変更しないことを保証します。
    void attack(void) const;

    // setWeaponメソッド: HumanBに武器をセットするために使用される関数です。
    // 引数として、セットするWeaponオブジェクトへの参照（Weapon& weapon）を受け取ります。
    // このメソッドにより、HumanBは後から武器を獲得したり、武器を変更したりできます。
    void setWeapon(Weapon& weapon);
};

#endif // ヘッダーガードの終了: HUMANB_HPPが定義されていれば、#ifndefから#endifまでのコードはスキップされます。
